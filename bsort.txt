#include<bits/stdc++.h>
using namespace std;


void parallelBubbleSort(int array[], int n){

    #pragma omp parallel for
    for(int i=0; i<n-1; ++i){
        for(int j=0; j<n-i-1; ++j){

            if(array[j] > array[j+1]){
                swap(array[j], array[j+1]);
            }
        }
    }
}

void BubbleSort(int array[], int n){

    for(int i=0; i<n-1; ++i){
        for(int j=0; j<n-i-1; ++j){

            if(array[j] > array[j+1]){
                swap(array[j], array[j+1]);
            }
        }
    }
}

int main(){

    int n = 1000;
    int *arr = new int[n];

    for(int i=0; i<n; i++){
        arr[i] = rand()%100;
    }

    clock_t s1 = clock();
    BubbleSort(arr, n);
    clock_t e1 = clock();
    double st = e1-s1;

    clock_t s2 = clock();
    parallelBubbleSort(arr, n);
    clock_t e2 = clock();
    double pt = e2-s2;

    cout<<"st "<<st<<endl;
    cout<<"pt "<<pt<<endl;

}